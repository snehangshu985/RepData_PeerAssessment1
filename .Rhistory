install.packages("devtools")
library(devtools)
>devtools::
help("devtools")
sessionInfo()
install.packages("KernSmooth")
install.packages("RMySQL")
library(swirl)
swirl()
head(pollution)
dim(pollution)
fivenum(pollution$pm25)
summary(pollution$pm25)
summary(ppm)
quantile(ppm)
boxplot(ppm, col = "blue")
abline(h=12)
hist(ppm, col = "green")
rug(ppm)
low
high
hist(ppm, col = "green", breaks=100)
rug(ppm)
hist(ppm, col = "green")
abline(v=12,lwd=2)
abline(v=median(ppm),lwd=4, col="magenta")
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg,col = "wheat",main="Number of Counties in Each Region")
boxplot( pm25~region)
boxplot( pm25~region, data=pollution)
boxplot( pm25~region, data=pollution, col="red")
par(mfrow = c(2, 1), mar = c(4, 4, 2, 1))
hist(subset(pollution, region == "east")$pm25, col = "green")
east <- subset(pollution,region=="east")
head(east)
hist(subset(pollution, region == "east")$pm25, col = "green")
hist(east$pm25, col = "green")
hist(west$pm25, col = "green")
hist(subset(pollution, region == "west")$pm25, col = "green")
plot(data=pollution, x=latitude, y=pm25)
plot(data=pollution, x=pollution$latitude, y=pollution$pm25)
with(pollution, plot(latitude, pm25))
abline(h=12)
abline(h = 12, lwd = 2, lty = 2)
argument (col)
with(pollution, plot(latitude, pm25, col=pollution$region))
plot(pollution$latitude, ppm, col = pollution$region)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
with(subset(pollution, region == "west"), plot(latitude, pm25, main = "West"))
west <- subset(pollution,region=="west")
with(subset(pollution, region == "west"), plot(latitude, pm25, main = "West"))
plot(west$latitude, west$pm25, main = "West")
with(subset(pollution, region == "east"), plot(latitude, pm25, main = "East"))
plot(east$latitude, east$pm25, main = "East")
?Devices
with(faithful,plot(eruptions ,waiting))
with(faithful,plot(eruptions ,waiting, main=""Old Faithful Geyser data""))
with(faithful,plot(eruptions ,waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful,plot(eruptions ,waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful,plot(eruptions ,waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png,file="geyserplot.png")
dev.off()
head(cars)
with(cars,plot(speed,dist))
text(speed)
text()
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income|region,data=state,layout=c(4,1))
xyplot(Life.Exp ~ Income|region,data=state,layout=c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ,hwy,data=mpg)
head(airquality)
range(airquality$Ozone,na.rm=TRUE)
hist(airquality$Ozone)
table( airquality$Month)
boxplot(Ozone~Month,airquality,)
boxplot(Ozone~Month,airquality,)
boxplot(Ozone~Month,airquality)
boxplot(Ozone~Month,airquality, xlab = "Month", ylab = "Ozone (ppb)",col.axis="blue",col.lab="red")
boxplot(Ozone~Month,airquality, xlab = "Month", ylab = "Ozone (ppb)",col.axis="blue",col.lab="red", main="Ozone and Wind in New York City")
title(main="Ozone and Wind in New York City")
plot(Wind,Ozone)
with(airquality, plot(Wind,Ozone))
title(main="Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind,airquality$Ozone,type = "n")
title(main="Wind and  Ozone in NYC")
title(main="Wind and Ozone in NYC")
may <- subset(airquality,months=="May")
may <- subset(airquality,months==5)
may <- subset(airquality,Month==5)
points(may$Wind,may$Ozone)
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality,Month!==5)
notmay <- subset(airquality,Month!=5)
points(notmay$Wind,noymay$Ozone,col="red",pch=17)
points(notmay$Wind,notmay$Ozone,col="red",pch=17)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright", pch = 1, col = c("blue", "red"), legend = c("May", "Other Months"))
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months")).
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months)).
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months))
aa
a<-3
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind,airquality$Ozone,main= "Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main= "Ozone and Solar Radiation")
par(mfrow=c(1,3),mar=c(4, 4, 2, 1),oma=c(0, 0, 2, 0))
plot(airquality$Wind,airquality$Ozone,main= "Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main= "Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
pnomr(1.64)
pnorm(1.64)
qnorm(0.95)
?pnorm
qnorm(.05/2)
qnorm(.01/2)
qnorm(.0001/2)
qnorm(.001/2)
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind, data=airquality)
xyplot(Ozone~Wind, data=airquality, col="red", pch=8, main="Big Apple Data")
xyplot(Ozone~Wind, data=airquality, pch=8, col="red",  main="Big Apple Data")
xyplot(Ozone~Wind| as.factor(Month), data=airquality)
xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout=c(5,1))
xyplot(Ozone ~ Wind | Month, data = airquality, layout=c(5,1))
p <- xyplot(Ozone~Wind,data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[[x.limits]]
p[["x.limits"]]
table(f)
xyplot(Group 1,Group 2)
xyplot(y~x|f,layout=c(2,1))
v1
v2
myedit("plot1.R")
pathtofile
source(pathtofile("plot1.R"),local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"),local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color,diamonds$cut)
myedit(" myLabels.R")
myedit("myLabels.R")
source(pathtofile("myLabels.R"),local=TRUE)
xyplot(price~carat | color*cut, data=diamonds, strip = FALSE, pch=20,xlab = "myxlab", ylab = "myylab", main="mymain")
xyplot(price~carat|color*cut,data=diamonds,strip=FALSE,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
xyplot(price~carat|color*cut,data=diamonds,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
library(swirl)
swirl()
library(swirl)
swirl()
install.packages("fields")
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames,"|", fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <- x1<0
sum(negative, na.rm=TURE)
sum(negative, na.rm=TRUE)
mean(negative, na.rm=TRUE)
dates <- pm1$Date
str(dates)
as.Date(as.character(dates),%Y%m%d)
as.Date(as.character(dates),"%Y%m%d")
dates <- as.Date(as.character(dates), "%Y%m%d"
dates <- as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negative],"month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0,State.Code==36&county.site=both)
cnt0 <- subset(pm0,pm0$State.Code==36&pm0$county.site=both)
cnt0 <- subset(pm0,pm0$State.Code==36&pm0$county.site="both")
2
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, cnt0$County.Code==63&cnt0$Site.ID==2008)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow=c(1,2),mar=c(4,4,2,1))
plot(dates0,x0sub,pch=20,)
abline(median(x0sub,na.rm = TRUE),lwd=2)
abline(h=median(x0sub,na.rm = TRUE),lwd=2)
plot(dates1,x1sub,pch=20,)
abline(h=median(x0sub,na.rm = TRUE),lwd=2)
abline(h = median(x1sub, na.rm = TRUE),lwd=2)
2
rng <- range(x0sub,x1sub,na.rm=TRUE)
rng
2
mn0 <- with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
mn1 <- with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
2
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
2
mrg <- merge(d0, d1, by = "state")
dim(nrg)
dim(mrg)
head(mrg)
2
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(.5, 2.5)))
2
with(mrg, points(rep(2, 52), mrg[, 3]))
2
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
2
mrg[mrg$mean.x < mrg$mean.y,]
setwd("D:/RepData_PeerAssessment1")
#1. Code for reading in the dataset and/or processing the data
activity_data <- read.csv("activity.csv")
#1. Code for reading in the dataset and/or processing the data
library(dplyr)
library(lubridate)
head(activity_data,20)
colnames(activity_data)
str(activity_data)
activity_data$date <- ymd(activity_data$date )
str(activity_data)
head(activity_data,30)
activity_data$weekday <- weekdays(activity_data$date)
head(activity_data,30)
head(activity_data)
#2. Histogram of the total number of steps taken each day
activity_data %>% group_by(date) %>% summarise(avg_step=mean(step,na.rm = T))
#2. Histogram of the total number of steps taken each day
steps_perday <- activity_data %>% group_by(date) %>% summarise(avg_step=mean(step,na.rm = T))
library(ggplot2)
steps_perday
#2. Histogram of the total number of steps taken each day
steps_perday <- activity_data %>% group_by(date) %>% summarise(avg_step=mean(steps,na.rm = T))
steps_perday
steps_perday <- activity_data %>% group_by(date) %>%
summarise(avg_step=mean(steps,na.rm = T))
steps_perday
View(activity_data)
g <- ggplot(steps_perday) + geom_histogram(aes(x=avg_step))
g
activity_data$steps <- ifelse(is.na(activity_data$steps),
ave(activity_data$steps, FUN = function(x) mean(x, na.rm=T)),
activity_data$steps)
steps_perday <- activity_data %>% group_by(date) %>%
summarise(avg_step=mean(steps,na.rm = T))
steps_perday
g <- ggplot(steps_perday) + geom_histogram(aes(x=avg_step))
g
ggplot(steps_perday) + geom_histogram(aes(x=avg_step),binwidth = 10)
g <- ggplot(steps_perday) + geom_histogram(aes(x=avg_step),binwidth = 10)
print(g)
print(g)
mean_steps <- mean(steps_perday$avg_step)
mean_steps
steps_perday <- activity_data %>% group_by(date) %>%
summarise(step_taken=sum(steps,na.rm = T))
steps_perday
g <- ggplot(steps_perday) + geom_histogram(aes(x=step_taken))
print(g)
g <- ggplot(steps_perday) + geom_histogram(aes(x=step_taken), binwidth = 5)
print(g)
g <- ggplot(steps_perday) + geom_histogram(aes(x=step_taken), binwidth = 60)
print(g)
g <- ggplot(steps_perday) + geom_histogram(aes(x=step_taken), binwidth = 5000)
print(g)
mean_steps <- mean(steps_perday$step_taken)
print(mean_steps)
mean_steps <- round(mean(steps_perday$step_taken),2)
print(mean_steps)
print(mean_steps)
mean_steps <- round(mean(steps_perday$step_taken))
print(mean_steps)
median_steps <- round(median(steps_perday$step_taken))
print(median_steps)
median(steps_perday$step_taken
median(steps_perday$step_taken)
median(steps_perday$step_taken)
#1. Code for reading in the dataset and/or processing the data
library(dplyr)
library(lubridate)
library(ggplot2)
activity_data <- read.csv("activity.csv")
activity_data$date <- ymd(activity_data$date )
activity_data$weekday <- weekdays(activity_data$date)
library(dplyr)
library(lubridate)
library(ggplot2)
activity_data <- read.csv("activity.csv")
activity_data$date <- ymd(activity_data$date )
activity_data$weekday <- weekdays(activity_data$date)
activity_data$steps <- ifelse(is.na(activity_data$steps),
ave(activity_data$steps, FUN = function(x) median(x, na.rm=T)),
activity_data$steps)
steps_perday <- activity_data %>% group_by(date) %>%
summarise(step_taken=sum(steps,na.rm = T))
g <- ggplot(steps_perday) + geom_histogram(aes(x=step_taken), binwidth = 5000)
print(g)
mean_steps <- round(mean(steps_perday$step_taken))
print(mean_steps)
median_steps <- round(median(steps_perday$step_taken))
print(median_steps)
head(activity_data)
activity_data %>% group_by(interval) %>%
summarise(tot_step=sum(step()))
activity_data %>% group_by(interval) %>%
summarise(tot_step=sum(step))
activity_data %>% group_by(interval) %>%
summarise(tot_step=sum(steps))
ggplot(activity_data) + geom_line(aes(x=interval,y=tot_step))
steps_trend <- activity_data %>% group_by(interval) %>%
summarise(tot_step=sum(steps))
ggplot(steps_trend) + geom_line(aes(x=interval,y=tot_step))
ggplot(steps_trend) + geom_line(aes(x=interval,y=tot_step)) +
ylab("Step Trend")
which.max(steps_trend$tot_step)
View(steps_trend)
steps_trend %>% subset(max(steps_trend$tot_step))
steps_trend[tot_step==max(steps_trend$tot_step),]
View(steps_trend)
max(steps_trend$tot_step
max(steps_trend$tot_step)
max(steps_trend$tot_step)
max_step <- max(steps_trend$tot_step)
steps_trend[tot_step==max_step,]
steps_trend[tot_step==10927,]
steps_trend[steps_trend$tot_step==10927,]
steps_trend[steps_trend$tot_step==max_step <- max(steps_trend$tot_step),]
steps_trend[steps_trend$tot_step== max(steps_trend$tot_step),]
which.max(steps_trend$tot_step)
View(steps_trend)
max_interval <- steps_trend[max_step_row ,]
steps_trend$interval
steps_trend$interval[104]
max_interval <- steps_trend$interval[max_step_row]
max_step_row <- which.max(steps_trend$tot_step)
max_interval <- steps_trend$interval[max_step_row]
print(max_interval)
library(dplyr)
library(lubridate)
library(ggplot2)
activity_data <- read.csv("activity.csv")
activity_data$date <- ymd(activity_data$date )
activity_data$weekday <- weekdays(activity_data$date)
steps_perday <- activity_data %>% group_by(date) %>%
summarise(step_taken=sum(steps,na.rm = T))
g <- ggplot(steps_perday) + geom_histogram(aes(x=step_taken), binwidth = 5000)
print(g)
round(mean(steps_perday$step_taken))
#1. Code for reading in the dataset and/or processing the data
library(dplyr)
library(lubridate)
library(ggplot2)
activity_data <- read.csv("activity.csv")
activity_data$date <- ymd(activity_data$date )
activity_data$weekday <- weekdays(activity_data$date)
#2. Histogram of the total number of steps taken each day
steps_perday <- activity_data %>% group_by(date) %>%
summarise(step_taken=sum(steps,na.rm = T))
g <- ggplot(steps_perday) + geom_histogram(aes(x=step_taken), binwidth = 5000)
print(g)
mean_steps <- round(mean(steps_perday$step_taken))
print(mean_steps)
median_steps <- round(median(steps_perday$step_taken))
print(median_steps)
steps_trend <- activity_data %>% group_by(interval) %>%
summarise(tot_step=sum(steps))
ggplot(steps_trend) + geom_line(aes(x=interval,y=tot_step)) +
ylab("Step Trend")
steps_trend <- activity_data %>% group_by(interval) %>%
summarise(tot_step=sum(steps,na.rm = T))
ggplot(steps_trend) + geom_line(aes(x=interval,y=tot_step)) +
ylab("Step Trend")
max_step_row <- which.max(steps_trend$tot_step)
max_interval <- steps_trend$interval[max_step_row]
print(max_interval)
activity_data$steps <- ifelse(is.na(activity_data$steps),
ave(activity_data$steps, FUN = function(x) median(x, na.rm=T)),
activity_data$steps)
activity_data$steps <- ifelse(is.na(activity_data$steps),
ave(activity_data$steps, FUN = function(x) median(x, na.rm=T)),
activity_data$steps)
activity_data$steps <- ifelse(is.na(activity_data$steps),
ave(activity_data$steps, FUN = function(x) mean(x, na.rm=T)),
activity_data$steps)
steps_perday_after <- activity_data %>% group_by(date) %>%
summarise(step_taken=sum(steps,na.rm = T))
g2 <- ggplot(steps_perday_after) + geom_histogram(aes(x=step_taken), binwidth = 5000)
print(g2)
round(mean(steps_perday$step_taken))
round(median(steps_perday$step_taken))
activity_data$steps <- ifelse(is.na(activity_data$steps),
ave(activity_data$steps, FUN = function(x) median(x, na.rm=T)),
activity_data$steps)
mean(steps_perday$step_taken)
steps_perday_after <- activity_data %>% group_by(date) %>%
summarise(step_taken=sum(steps,na.rm = T))
mean(steps_perday_after$step_taken)
any(is.na(activity_data))
library(dplyr)
library(lubridate)
library(ggplot2)
activity_data <- read.csv("activity.csv")
activity_data$date <- ymd(activity_data$date )
activity_data$weekday <- weekdays(activity_data$date)
steps_perday <- activity_data %>% group_by(date) %>%
summarise(step_taken=sum(steps,na.rm = T))
mean(steps_perday$step_taken)
any(is.na(activity_data))
median(steps_perday$step_taken)
steps_perday <- activity_data %>% group_by(date) %>%
summarise(step_taken=sum(steps,na.rm = T))
g <- ggplot(steps_perday) + geom_histogram(aes(x=step_taken), binwidth = 5000)
print(g)
mean_steps <- round(mean(steps_perday$step_taken))
print(mean_steps)
median_steps <- round(median(steps_perday$step_taken))
print(median_steps)
steps_trend <- activity_data %>% group_by(interval) %>%
summarise(tot_step=sum(steps,na.rm = T))
ggplot(steps_trend) + geom_line(aes(x=interval,y=tot_step)) +
ylab("Step Trend")
max_step_row <- which.max(steps_trend$tot_step)
max_interval <- steps_trend$interval[max_step_row]
print(max_interval)
any(is.na(activity_data))
activity_data$steps <- ifelse(is.na(activity_data$steps),
ave(activity_data$steps, FUN = function(x) median(x, na.rm=T)),
activity_data$steps)
any(is.na(activity_data))
steps_perday_after <- activity_data %>% group_by(date) %>%
summarise(step_taken=sum(steps,na.rm = T))
mean(steps_perday_after$step_taken)
g2 <- ggplot(steps_perday_after) + geom_histogram(aes(x=step_taken), binwidth = 5000)
print(g2)
head(activity_data)
unique(activity_data$weekday)
activity_data$Weekends <- ifelse(activity_data$weekday %in% c("Saturday","Sunday"),
"Weekend",
"Weekdays")
head(activity_data)
View(activity_data)
weeks_trend <- activity_data %>% group_by(Weekends,interval) %>% summarise(ave_step=sum(steps))
weeks_trend <- activity_data %>% group_by(interval,Weekends) %>%
summarise(ave_step=sum(steps))
weeks_trend
ggplot(weeks_trend) + geom_line(aes(x=interval,y=ave_step)) +
facet_grid(.~Weekends)
weeks_trend <- activity_data %>% group_by(interval,Weekends) %>%
summarise(ave_step=mean(steps))
ggplot(weeks_trend) + geom_line(aes(x=interval,y=ave_step)) +
facet_grid(.~Weekends)
ggplot(weeks_trend) + geom_line(aes(x=interval,y=ave_step)) +
facet_grid(.~Weekends)+
xlab("Time in minutes")+
ylab("Average Steps")
